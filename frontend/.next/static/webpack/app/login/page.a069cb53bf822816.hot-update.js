"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/login/page",{

/***/ "(app-pages-browser)/./app/store/useAuthStore.ts":
/*!***********************************!*\
  !*** ./app/store/useAuthStore.ts ***!
  \***********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useAuthStore: () => (/* binding */ useAuthStore)\n/* harmony export */ });\n/* harmony import */ var zustand__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! zustand */ \"(app-pages-browser)/./node_modules/zustand/esm/react.mjs\");\n/* harmony import */ var zustand_middleware__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! zustand/middleware */ \"(app-pages-browser)/./node_modules/zustand/esm/middleware.mjs\");\n/* harmony import */ var socket_io_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! socket.io-client */ \"(app-pages-browser)/./node_modules/socket.io-client/build/esm/index.js\");\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! axios */ \"(app-pages-browser)/./node_modules/axios/lib/axios.js\");\n/* harmony import */ var react_hot_toast__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-hot-toast */ \"(app-pages-browser)/./node_modules/react-hot-toast/dist/index.mjs\");\n\n\n\n\n\n// Use the BASE_URL to handle different environments (development vs production)\nconst BASE_URL = \"http://localhost:3001\";\nconst useAuthStore = (0,zustand__WEBPACK_IMPORTED_MODULE_2__.create)()((0,zustand_middleware__WEBPACK_IMPORTED_MODULE_3__.persist)((set, get)=>({\n        hasHydrated: false,\n        authUser: null,\n        isCheckingAuth: true,\n        onlineUsers: [],\n        isUpdatingProfile: false,\n        socket: null,\n        checkAuth: async ()=>{\n            try {\n                const response = await fetch(\"\".concat(BASE_URL, \"/api/user/checkAuth\"), {\n                    method: \"GET\",\n                    credentials: \"include\"\n                });\n                if (response.ok) {\n                    const data = await response.json();\n                    set({\n                        authUser: data.user,\n                        isCheckingAuth: false\n                    });\n                    get().connectSocket();\n                } else {\n                    set({\n                        authUser: null\n                    });\n                }\n            } catch (err) {\n                console.error(\"Error during authentication check:\", err);\n                set({\n                    authUser: null\n                });\n            }\n        },\n        login: async (data)=>{\n            try {\n                const response = await fetch(\"\".concat(BASE_URL, \"/api/user/login\"), {\n                    method: \"POST\",\n                    credentials: \"include\",\n                    headers: {\n                        \"Content-Type\": \"application/json\"\n                    },\n                    body: JSON.stringify(data)\n                });\n                if (response.ok) {\n                    const responseData = await response.json();\n                    set({\n                        authUser: responseData.user\n                    });\n                    react_hot_toast__WEBPACK_IMPORTED_MODULE_1__.toast.success(\"Login successful\");\n                    get().connectSocket(); // Ensure this function is also safe for client-only\n                    console.log(\"auth user in login function is\", get().authUser);\n                } else {\n                    const errorData = await response.json();\n                    throw new Error(errorData.message || \"Invalid credentials\");\n                }\n            } catch (err) {\n                console.error(\"Error during login:\", err.message);\n                throw err;\n            }\n        },\n        logout: async ()=>{\n            try {\n                await fetch(\"\".concat(BASE_URL, \"/api/user/logout\"), {\n                    method: \"POST\",\n                    credentials: \"include\"\n                });\n                react_hot_toast__WEBPACK_IMPORTED_MODULE_1__.toast.success(\"Logout successful\");\n                set({\n                    authUser: null\n                });\n                get().disconnectSocket();\n            } catch (err) {\n                console.error(\"Error during logout:\", err);\n            }\n        },\n        updateProfile: async (profilepic)=>{\n            set({\n                isUpdatingProfile: true\n            });\n            try {\n                const response = await axios__WEBPACK_IMPORTED_MODULE_4__[\"default\"].patch(\"\".concat(BASE_URL, \"/api/user/update-profile\"), {\n                    profilepic\n                }, {\n                    headers: {\n                        \"Content-Type\": \"application/json\"\n                    },\n                    withCredentials: true\n                });\n                const updatedUser = response.data;\n                console.log(\"Updated user is\", updatedUser);\n                set({\n                    authUser: updatedUser\n                });\n            } catch (err) {\n                console.error(\"Error updating profile:\", err);\n            } finally{\n                set({\n                    isUpdatingProfile: false\n                });\n            }\n        },\n        connectSocket: ()=>{\n            const { authUser } = get();\n            console.log(\"authUse after login r\", authUser);\n            if (!authUser || !authUser._id) {\n                console.log(\"No auth user\");\n                return;\n            }\n            if (authUser) {\n                const newSocket = (0,socket_io_client__WEBPACK_IMPORTED_MODULE_0__.io)(BASE_URL, {\n                    query: {\n                        userId: authUser.id\n                    }\n                });\n                newSocket.connect();\n                set({\n                    socket: newSocket\n                });\n                console.log(\"Socket from connectSocket function is\", socket);\n                newSocket.on(\"getOnlineUsers\", (userIds)=>{\n                    console.log(\"Online users received:\", userIds);\n                    set({\n                        onlineUsers: userIds\n                    });\n                });\n                console.log(\"Socket connected\");\n            }\n        },\n        disconnectSocket: ()=>{\n            const socket1 = get().socket;\n            if (socket1 && socket1.connected) {\n                socket1.disconnect();\n            }\n            set({\n                socket: null\n            });\n        }\n    }), {\n    name: \"auth-storage\",\n    storage: (0,zustand_middleware__WEBPACK_IMPORTED_MODULE_3__.createJSONStorage)(()=>localStorage),\n    partialize: (state)=>({\n            authUser: state.authUser,\n            onlineUsers: state.onlineUsers,\n            isCheckingAuth: state.isCheckingAuth,\n            isUpdatingProfile: state.isUpdatingProfile,\n            // Exclude functions and socket state from persistence\n            ...Object.fromEntries(Object.entries(state).filter((param)=>{\n                let [key] = param;\n                return ![\n                    \"socket\",\n                    \"connectSocket\",\n                    \"disconnectSocket\"\n                ].includes(key);\n            }))\n        })\n}));\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/store/useAuthStore.ts\n"));

/***/ })

});